# Lessons from Game Design - Metagaming, Speedrunning, and Level Design

The following posts were three of many Lessons from Game Design articles created by the Gamelab team in Spring 2020. 

The first post on [Metagaming] (https://spark.adobe.com/page/COxKDUB7VT8Ln/) argues that instructors prioritize teaching a
systemic understanding of a discipline or field in order for them to being able to optimize how they "play the game" with other 
scholars. Metagamers in competitive games are among the best because they have an exhasutive knowledge of the rules of the game
and a keen eye for tracking play style trends of other players. This means that they can choose tactics and strategies put the 
existing rules in their favor while also thinking other players'. Instructors might want their students to metagame their course 
in order to teach critical thinking and to gain a greater understanding of the methods and rationale supporting a scholars work. 

The second post on [Speedrunning] (https://spark.adobe.com/page/QRTMaXJVYJCEf/) takes the conclusions of the metagaming article 
even further. While metagaming, a player optimizes their tactics to make the rules and player trends work in their favor. Even as
it may seem like they're "cheating," they actually are just within the strict bounds of the legitimate play. They may tiptoe toward
cheating at the borders of what is legal or not as defined by the gaming community, but they don't cross that line. By contrast, in 
speedrunning players search for ways to break the rules of the game to fit their goals. For example, they might clip through collision,
break the sequence of events, de-spawn enemies, etc. in order to beat the game faster. All this disregards the developer-intended
gameplay and creates innovative methods for solving challenges. This post argues that instructors would want to teach their students
to speedrun their course so that they can learn which methods are necessary in their field and which methods should be broken in order
to reimagine solutions to scholarly challenges. 

Lastly, the [Level Design] (https://spark.adobe.com/page/ZxufMfubx98TW/) post is a defense of developer-intended gameplay. Developer-
intended gameplay is when the game designer creates a level that limits what a player can do usually according to a sequence of some
kind. For example, the developer might design a level in a platformer where you learn to jump, then double jump, then wall jump
depending on which obstacles they force into your path. It usually follows the formula of Step 1, Step 2, Step 3...Step X such 
that every skill or challenge must occur in a specific order. Hence, this is why sequence breaks in speedrunning break the game.
Much of the first two entries presented a negative picture of developer-intended level design as a restrictive curated experience that kept 
learning on rails and hampered creative thinking. This time, however, I argue that developer-intended gameplay in course design is 
useful for teaching skills to beginners. In fact, it is a necessary step on the path toward metagaming and speedrunning. I also offer a 
few methods for intuitive level design and skill building techniques as shown in the some of the best level designs in video games.
